{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","utils/converter.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setMovie","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_Fragment","onSubmit","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","data","Title","Poster","Plot","imdbID","convertMovieData","err","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","find","m","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47d72b86.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { convertMovieData } from '../../utils/converter';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMovie:(movie:Movie) => void;\n};\n\nexport const FindMovie:React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleTitleFieldChange = (\n    event:React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setTitle(event.target.value);\n\n    if (error) {\n      setError('');\n    }\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(title).then(data => {\n      if ('Response' in data && data.Response === 'False') {\n        setError(data.Error);\n        setMovie(null);\n      } else {\n        const movieD = data as MovieData;\n\n        setMovie(convertMovieData(movieD));\n      }\n    }).catch((err) => {\n      setError(err.Error);\n      setMovie(null);\n    }).finally(() => setIsLoading(false));\n  };\n\n  const handleAddButtonClick = () => {\n    if (!movie) {\n      return;\n    }\n\n    addMovie(movie);\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': !!error,\n              })}\n              value={title}\n              onChange={handleTitleFieldChange}\n            />\n          </div>\n\n          {!!error && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButtonClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div\n          className=\"container\"\n          data-cy=\"previewContainer\"\n        >\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3de62952';\n\nexport function getMovie(query:string):Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`).then(res => res.json()).catch(() => ({\n    Response: 'False',\n    Error: 'unexpected error',\n  }));\n}\n","import { MovieData } from '../types/MovieData';\nimport { Movie } from '../types/Movie';\n\nconst DEFAULT_IMG_URL = ''\n  + 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport function convertMovieData({\n  Title,\n  Poster,\n  Plot,\n  imdbID,\n}:MovieData):Movie {\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A' ? DEFAULT_IMG_URL : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie:Movie) => {\n    if (movies.find(m => m.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}